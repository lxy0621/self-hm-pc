==========================================DAY1=================================

api : axios相关代码
assets : 静态资源
components : 公用级别组件
router : 路由
store : 本地存储
views : 路由级别组件
App.vue : 根组件
main : 入口函数
style : less
---------------------------------
开发登录模块：

- 创建登录分支：git branch login
- 切换到登录分支：git checkout login
  - 进行编码，若干次提交
  - git add . 暂存区
  - git commit -m '备注信息'
  - ...
  - 登录功能完毕：
    - 切换master分支 ： git checkout master
    - 合并login分支代码：git merge login

----------------------------------
elementUI使用
1.npm i element-ui
2.main.js =>
     import ElementUi from 'element-ui' 
     import 'element-ui/lib/theme-chalk/index.css'
     Vue.use(ElementUi)

----------------配置路由------------------
※npm i vue-router

※router-index.js =>

    import VueRouter from 'vue-router'
    import Vue from 'vue'

    Vue.use(VueRouter)

    const router = new VueRouter({
        routes: []
    })

    export default router

※main.js => 

    import router from '@/router'

    new Vue({
        +router,
    })

※router => index.js 配置路由

    import Login from '@/views/login'

    router:[
        {path:'/login',component:Login}
    ]

※App.js => <div class="app">
                //一级路由组件显示的位置
                <router-view></router-view>
            </div>



==========================================DAY2=================================

表单验证：
    1. :rules="loginRules"
    2. data(){
        return{
            loginRules:{
                mobile:[
                    {required:true,message:"请输入手机号",trigger:"blur"}
                ],
                code:[
                    {required:true,message:"请输入手机号",trigger:"blur"}
                ]
            }
        }
    }
    3. prop="mobile"    prop="code"

自定义效验：

    1.{validator:checkMobile,trigger:blur}

    2.const checkMobile = ( rules,value,callback) =>{
        if(!/^1[3-9\d{9}$/.test{value}){
            return callback('手机号码格式错误')
        }
        callback()
    }

整体表单效验

    1.表单整体：ref="loginForm"
    2.绑定事件：@click="login"
    2.methods:{
        login(){
            this.$refs.validate((valid)=>{
                if(valid){
                    //进行登录
                }
            })
        }
    }

//进行登录

    1.main.js => import axios from 'axios'
                Vue.prototype.$http = axios


    2.methods:{
        login(){
            this.$refs.validate((valid)=>{
                if(valid){
                    //进行登录
                    if(valid){
                        this.$http.post('url',this.loginForm).then((res)=>{
                            this.$router.push('/')
                        }).catch(err=>{
                            this.$message.err('手机号或验证码错误')
                        })
                    }
                }
            })
        }
    }

通过token登录    
1. store=>index.js

    const KEY = 'hm-toutiao-pc-91-user'
    export default {

    setUser (user) {
        window.sessionStorage.setItem(KEY, JSON.stringify(user))
    },

    getUser () {
        return JSON.parse(window.sessionStorage.getItem(KEY) || '{}')
    },
    delUser () {
        window.sessionStorage.removeItem(KEY)
    }
    }
2.  login => index.vue

    import store from '@/store'  

    store.setUser(res.data.data)

4.  router => index.vue

  router.beforeEach((to, from, next) => {
  if (to.path !== '/login' && !store.getUser().token) return next('login')
  next()
  })
